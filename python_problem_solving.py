# -*- coding: utf-8 -*-
"""exerPy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FgdG6WjgMiey4h24fOtvLL7cFr1cjf7A

#Level 1

Question 1

Level 1

Question: Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200 (both included). The numbers obtained should be printed in a comma-separated sequence on a single line.

Hints: Consider use range(#begin, #end) method
"""

numbers = []

for i in range(2000, 3200):
    if(i % 7 == 0 and i % 5 != 0):
        numbers.append(i)

print(numbers)

"""Question 2

Level 1

Question: Write a program which can compute the factorial of a given numbers. The results should be printed in a comma-separated sequence on a single line. Suppose the following input is supplied to the program: 8 Then, the output should be: 40320

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.
"""

number = int(input())
result = number

for i in range(number -1, 0, -1):
    result = result * i

print(result)

"""Question 3

Level 1

Question: With a given integral number n, write a program to generate a dictionary that contains (i, i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary. Suppose the following input is supplied to the program: 8 Then, the output should be: {1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64}

Hints: In case of input data being supplied to the question, it should be assumed to be a console input. Consider use dict()
"""

number = int(input())
roots = {}

for i in range(1, number + 1):
    roots[i] = i * i

print(roots)

"""Question 4

Level 1

Question: Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number. Suppose the following input is supplied to the program: 34,67,55,33,12,98 Then, the output should be: ['34', '67', '55', '33', '12', '98'] ('34', '67', '55', '33', '12', '98')

Hints: In case of input data being supplied to the question, it should be assumed to be a console input. tuple() method can convert list to tuple
"""

entered_data = input()
data = list(entered_data.split(','))
o_tuple = tuple(data)
print(data, o_tuple)

"""Question 5

Level 1

Question: Define a class which has at least two methods: getString: to get a string from console input printString: to print the string in upper case. Also please include simple test function to test the class methods.

Hints: Use init method to construct some parameters
"""

class O_class(object):
    def __init__(self, string = ''):
        self.string = string

    def getString(self):
        self.string = input()

    def printString(self):
        print(self.string.upper())

if __name__=='__main__':
    class1 = O_class()
    class1.getString()
    class1.printString()

"""#Level 2

Question 6

Level 2

Question: Write a program that calculates and prints the value according to the given formula: Q = Square root of [(2 * C * D)/H] Following are the fixed values of C and H: C is 50. H is 30. D is the variable whose values should be input to your program in a comma-separated sequence. Example Let us assume the following comma separated input sequence is given to the program: 100,150,180 The output of the program should be: 18,22,24

Hints: If the output received is in decimal form, it should be rounded off to its nearest value (for example, if the output received is 26.0, it should be printed as 26) In case of input data being supplied to the question, it should be assumed to be a console input.
"""

import math

q = 0
c = 50
h = 30

entered_data = input()
data = list(entered_data.split(','))
result = []
for d in data:
    q = round(math.sqrt((2 * c * int(d)) / h))
    result.append(q)

print(result)

"""Question 7

Level 2

Question: Write a program which takes 2 digits, X,Y as input and generates a 2-dimensional array. The element value in the i-th row and j-th column of the array should be i*j. Note: i=0,1.., X-1; j=0,1,¡­Y-1. Example Suppose the following inputs are given to the program: 3,5 Then, the output of the program should be: [[0, 0, 0, 0, 0], [0, 1, 2, 3, 4], [0, 2, 4, 6, 8]]

Hints: Note: In case of input data being supplied to the question, it should be assumed to be a console input in a comma-separated form.
"""

entered_data = input().split(',')
result_list = []
initial_i = int(entered_data[0])
initial_j = int(entered_data[1])
i = 0
j = 0

for i in range(0, initial_i):
    data = []
    for j in range(0, initial_j):
        data.append(i * j)

    result_list.append(data)

print(result_list)

"""Question 8

Level 2

Question: Write a program that accepts a comma separated sequence of words as input and prints the words in a comma-separated sequence after sorting them alphabetically. Suppose the following input is supplied to the program: without,hello,bag,world Then, the output should be: bag,hello,without,world

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.
"""

entered_data = input()
data = list(entered_data.split(','))
data.sort()
result = ','.join(data)
print(result)

"""Question 9

Level 2

Question£º Write a program that accepts sequence of lines as input and prints the lines after making all characters in the sentence capitalized. Suppose the following input is supplied to the program: Hello world Practice makes perfect Then, the output should be: HELLO WORLD PRACTICE MAKES PERFECT

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.
"""

while(True):
    entered_data = input()
    if entered_data == '':
        break
    else:
        print(entered_data.upper())

"""Question 10

Level 2

Question: Write a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically. Suppose the following input is supplied to the program: hello world and practice makes perfect and hello world again Then, the output should be: again and hello makes perfect practice world

Hints: In case of input data being supplied to the question, it should be assumed to be a console input. We use set container to remove duplicated data automatically and then use sorted() to sort the data.
"""

entered_data = list(input().split(' '))
entered_data.sort()
i = 0
while(i <= len(entered_data) - 2):
    if entered_data[i] == entered_data[i + 1]:
        entered_data.pop(i)
    i += 1

print(' '.join(entered_data))

"""Question 11

Level 2

Question: Write a program which accepts a sequence of comma separated 4 digit binary numbers as its input and then check whether they are divisible by 5 or not. The numbers that are divisible by 5 are to be printed in a comma separated sequence. Example: 0100,0011,1010,1001 Then the output should be: 1010 Notes: Assume the data is input by console.

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.
"""

entered_data = list(input().split(','))
result_list = []
for number in entered_data:
    digits = list(map(int, number))
    result = (digits[0] * 8 + digits[1] * 4
    + digits[2] * 2 + digits[3] * 1)
    if result % 5 == 0:
        result_list.append(number)

print(','.join(result_list))

"""Question 12

Level 2

Question: Write a program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number. The numbers obtained should be printed in a comma-separated sequence on a single line.

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.
"""

number = 1000
result_list = []

while(number <= 3000):
    if number % 2 != 0:
        result_list.append(str(number))

    number += 1

print(','.join(result_list))

"""Question 13

Level 2

Question: Write a program that accepts a sentence and calculate the number of letters and digits. Suppose the following input is supplied to the program: hello world! 123 Then, the output should be: LETTERS 10 DIGITS 3

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.
"""

letters = 0
digits = 0
entered_data = input()

for character in entered_data:
    if character.isalpha():
        letters += 1
    if character.isdigit():
        digits += 1

print(f'LETTERS {letters} DIGITS {digits}')

"""Question 14

Level 2

Question: Write a program that accepts a sentence and calculate the number of upper case letters and lower case letters. Suppose the following input is supplied to the program: Hello world! Then, the output should be: UPPER CASE 1 LOWER CASE 9

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.
"""

lower = 0
upper = 0
entered_data = input()

for character in entered_data:
    if character.islower():
        lower += 1
    if character.isupper():
        upper += 1

print(f'UPPER CASE {upper} LOWER CASE {lower}')

"""Question 15

Level 2

Question: Write a program that computes the value of a+aa+aaa+aaaa with a given digit as the value of a. Suppose the following input is supplied to the program: 9 Then, the output should be: 11106

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.
"""

number = input()
result = 0
formula = 'a'
for i in range(4):
    result += int(formula.replace('a', number))
    formula += 'a'

print(result)

"""Question 16

Level 2

Question: Use a list comprehension to square each odd number in a list. The list is input by a sequence of comma-separated numbers. Suppose the following input is supplied to the program: 1,2,3,4,5,6,7,8,9 Then, the output should be: 1,3,5,7,9

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.
"""

data = list(input().split(','))
data = [item for item in range(len(data) + 1) if item % 2 != 0]
print(','.join(map(str, data)))

"""Question 17

Level 2

Question: Write a program that computes the net amount of a bank account based a transaction log from console input. The transaction log format is shown as following: D 100 W 200

D means deposit while W means withdrawal. Suppose the following input is supplied to the program: D 300 D 300 W 200 D 100 Then, the output should be: 500

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.
"""

amount = 0

entered_data = list(input().split(' '))

for i in range(0, len(entered_data), 2):
    if entered_data[i] == 'D':
        amount += int(entered_data[i + 1])
    if entered_data[i] == 'W':
        amount -= int(entered_data[i + 1])

print(amount)

"""#Level 3

Question 18

Level 3

Question: A website requires the users to input username and password to register. Write a program to check the validity of password input by users. Following are the criteria for checking the password:

At least 1 letter between [a-z]
At least 1 number between [0-9]
At least 1 letter between [A-Z]
At least 1 character from [$#@]
Minimum length of transaction password: 6
Maximum length of transaction password: 12 Your program should accept a sequence of comma separated passwords and will check them according to the above criteria. Passwords that match the criteria are to be printed, each separated by a comma. Example If the following passwords are given as input to the program: ABd1234@1,a F1#,2w3E*,2We3345 Then, the output of the program should be: ABd1234@1
Hints: In case of input data being supplied to the question, it should be assumed to be a console input.
"""

entered_data = list(input().split(','))
valid_passwords = []

for password in entered_data:
    c_lower = c_upper = number = symbol = valid_len =  False
    if len(password) >= 6 and len(password) <= 12:
        valid_len = True
    for char in password:
        if char.islower():
            c_lower = True
        if char.isupper():
            c_upper = True
        if char.isdigit():
            number = True
        if char == '$' or char == '#' or char == '@':
            symbol = True

    if c_lower and c_upper and number and symbol and valid_len:
        valid_passwords.append(password)

print(','.join(valid_passwords))

"""Question 19

Level 3

Question: You are required to write a program to sort the (name, age, height) tuples by ascending order where name is string, age and height are numbers. The tuples are input by console. The sort criteria is: 1: Sort based on name; 2: Then sort based on age; 3: Then sort by score. The priority is that name > age > score. If the following tuples are given as input to the program: Tom,19,80 John,20,90 Jony,17,91 Jony,17,93 Json,21,85 Then, the output of the program should be: [('John', '20', '90'), ('Jony', '17', '91'), ('Jony', '17', '93'), ('Json', '21', '85'), ('Tom', '19', '80')]

Hints: In case of input data being supplied to the question, it should be assumed to be a console input. We use itemgetter to enable multiple sort keys.
"""

from operator import itemgetter
result = []

o_input = input().replace(' ', ',')
o_list = list(o_input.split(','))


for i in range(0, len(o_list), 3):
    result.append(tuple(o_list[i : i + 3]))

result = sorted(result, key=itemgetter(0, 1, 2))

print(result)

"""Question 20

Level 3

Question: Define a class with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.

Hints: Consider use yield
"""

class DivisibleBySeven:
    def __init__(self, n):
        self.n = n

    def generator(self):
        for num in range(self.n):
            if num % 7 == 0:
                yield num

if __name__ == '__main__':
    sequence1 = DivisibleBySeven(int(input()))
    for item in sequence1.generator():
        print(item)

"""Question 21

Level 3

Question A robot moves in a plane starting from the original point (0,0). The robot can move toward UP, DOWN, LEFT and RIGHT with a given steps. The trace of robot movement is shown as the following: UP 5 DOWN 3 LEFT 3 RIGHT 2 ¡­ The numbers after the direction are steps. Please write a program to compute the distance from current position after a sequence of movement and original point. If the distance is a float, then just print the nearest integer. Example: If the following tuples are given as input to the program: UP 5 DOWN 3 LEFT 3 RIGHT 2 Then, the output of the program should be: 2

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.
"""

import math
entered_data = list(input().split(' '))
position = [0,0]

for i in range(0, len(entered_data), 2):
    if entered_data[i] == 'RIGHT':
        position[0] += int(entered_data[i + 1])
    if entered_data[i] == 'LEFT':
        position[0] -= int(entered_data[i + 1])
    if entered_data[i] == 'UP':
        position[1] += int(entered_data[i + 1])
    if entered_data[i] == 'DOWN':
        position[1] -= int(entered_data[i + 1])

distance = round(math.sqrt((position[0] ** 2) + (position[1] ** 2)))

print(distance)

"""Question 22

Level 3

Question: Write a program to compute the frequency of the words from the input. The output should output after sorting the key alphanumerically. Suppose the following input is supplied to the program: New to Python or choosing between Python 2 and Python 3? Read Python 2 or Python 3. Then, the output should be: 2:2 3.:1 3?:1 New:1 Python:5 Read:1 and:1 between:1 choosing:1 or:2 to:1

Hints In case of input data being supplied to the question, it should be assumed to be a console input.
"""

entered_data = list(input().split(' '))
entered_data.sort()
result = {}
final = ''

for item in entered_data:
    if item in result:
        result[item] += 1
    else:
        result[item] = 1

for item in result:
    print(f'{item}:{result[item]}', end = ' ')

"""Question 23

level 1

Question: Write a method which can calculate square value of number

Hints: Using the ** operator
"""

number = int(input())
print(number ** 2)

"""Question 24

Level 1

Question:

Python has many built-in functions, and if you do not know how to use it, you can read document online or find some books. But Python has a built-in document function for every built-in functions.

Please write a program to print some Python built-in functions documents, such as abs(), int(), raw_input()

And add document for your own function Hints: The built-in document method is doc
"""

print(abs.__doc__)
print(int.__doc__)
print(input.__doc__)

def celsius_fahrenheit(tempc):
    """This function recieves a temperature in celsius, convert it to\nfahrenheit and returns the result."""
    tempf = (tempc * 9/5) + 32
    return tempf

print(celsius_fahrenheit.__doc__)

"""Question 25

Level 1

Question: Define a class, which have a class parameter and have a same instance parameter.

Hints: Define a instance parameter, need add it in init method You can init a object with construct parameter or set the value later
"""

class Square:
    def __init__(self, side):
        self.side = side

if __name__ == '__main__':
    square1 = Square(5)

"""Question 26:

Define a function which can compute the sum of two numbers.

Hints: Define a function with two numbers as arguments. You can compute the sum in the function and return the value.
"""

def sum_of_2(number1, number2):
    result = number1 + number2
    return result

"""Question 27

Define a function that can convert a integer into a string and print it in console.

Hints:

Use str() to convert a number to string.
"""

def tostring(number):
    string = str(number)
    return string

"""Question 28

Define a function that can convert a integer into a string and print it in console.

Hints:

Use str() to convert a number to string.
"""

def toint(string):
    int = int(string)
    return int

"""Question 29

Define a function that can receive two integral numbers in string form and compute their sum and then print it in console.

Hints:

Use int() to convert a string to integer.
"""

def calculate_sum(number1, number2):
    result = int(number1) + int(number2)
    return result

print(calculate_sum('3', '4'))

"""Question 30

Define a function that can accept two strings as input and concatenate them and then print it in console.

Hints:

Use + to concatenate the strings
"""

def concatenate(str1, str2):
    result = str1 + str2
    return result

print(concatenate('hello', 'world'))

"""Question 31

Define a function that can accept two strings as input and print the string with maximum length in console. If two strings have the same length, then the function should print al l strings line by line.

Hints:

Use len() function to get the length of a string
"""

def max_lenght(str1, str2):
    if len(str1) == len(str2):
        return str1, str2
    elif len(str1) > len(str2):
        return str1
    else:
        return str2

print(max_lenght('hello', 'world'))

"""Question 32

Define a function that can accept an integer number as input and print the "It is an even number" if the number is even, otherwise print "It is an odd number".

Hints:

Use % operator to check if a number is even or odd.
"""

def classify(number):
    if number % 2 == 0:
        print('It is an even number')
    else:
        print('It is an odd number')

classify(10)

"""Question 33

Define a function which can print a dictionary where the keys are numbers between 1 and 3 (both included) and the values are square of keys.

Hints:

Use dict[key]=value pattern to put entry into a dictionary.
Use ** operator to get power of a number.
"""

def squares():
    result = {}
    for i in range(1, 4):
        result[i] = i ** 2
    return result

print(squares())

"""Question 42

With a given tuple (1,2,3,4,5,6,7,8,9,10), write a program to print the first half values in one line and the last half values in one line.

Hints:

Use [n1:n2] notation to get a slice from a tuple.
"""

entry = (1,2,3,4,5,6,7,8,9,10)
print(entry[0:5])
print(entry[5:10])